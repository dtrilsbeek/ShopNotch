@model ProductViewModel

@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Notch/Views/Shared/_NotchLayout.cshtml";
}
<div id="notch-collection-container">
    <h1>Manage Products</h1>

    <p>
        <a asp-action="Create">Create New</a>
    </p>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Product.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Product.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Product.Price)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Product.Sku)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Product.Weight)
                </th
                ><th>
                    @Html.DisplayNameFor(model => model.Product.Length)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Product.Width)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Product.Height)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Products)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Sku)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Weight)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Length)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Width)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Height)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

</div>